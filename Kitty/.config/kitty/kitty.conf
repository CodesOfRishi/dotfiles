# NOTE: kitty_mod is CTRL+Shift by default
# REF: https://sw.kovidgoyal.net/kitty/conf/#opt-kitty.kitty_mod

# unbind kitty_mod+w shortcut to avoid accidental closure of windows
map kitty_mod+w no_op 

# INFO: Fonts{{{

font_family      JetBrainsMono NFM Regular
bold_font        auto
italic_font      auto
bold_italic_font auto

# INFO: Cursor

# The cursor shape can be one of block, beam, underline. Note that
# when reloading the config this will be changed only if the cursor
# shape has not been set by the program running in the terminal. This
# sets the default cursor shape, applications running in the terminal
# can override it. In particular, shell integration
# <https://sw.kovidgoyal.net/kitty/shell-integration/> in kitty sets
# the cursor shape to beam at shell prompts. You can avoid this by
# setting shell_integration to no-cursor.
shell_integration no-cursor
cursor_shape underline
# }}}

# INFO: Windows Layout{{{

# enable specific Windows layouts
# The enabled window layouts. A comma separated list of layout names.
# The special value all means all layouts. The first listed layout
# will be used as the startup layout. Default configuration is all
# layouts in alphabetical order. For a list of available layouts, see
# the layouts <https://sw.kovidgoyal.net/kitty/overview/#layouts>.
enabled_layouts vertical, horizontal, stack  

# # Mappings for resizing windows
# # REF: https://sw.kovidgoyal.net/kitty/layouts/#resizing-windows
# map ctrl+right resize_window narrower
# map ctrl+left resize_window wider
# map ctrl+up resize_window taller
# map ctrl+down resize_window shorter 3
# reset all windows in the tab to default sizes
map ctrl+home resize_window reset 

# Mapping for opening a new tab or windows with PWD of the active tab/window.
map kitty_mod+t new_tab_with_cwd
map kitty_mod+enter new_window_with_cwd
# }}}

# INFO: Color Scheme{{{

# background_opacity 0.8

#: The opacity of the background. A number between zero and one, where
#: one is opaque and zero is fully transparent. This will only work if
#: supported by the OS (for instance, when using a compositor under
#: X11). Note that it only sets the background color's opacity in
#: cells that have the same background color as the default terminal
#: background, so that things like the status bar in vim, powerline
#: prompts, etc. still look good. But it means that if you use a color
#: theme with a background color in your editor, it will not be
#: rendered as transparent. Instead you should change the default
#: background color in your kitty config and not use a background
#: color in the editor color scheme. Or use the escape codes to set
#: the terminals default colors in a shell script to launch your
#: editor. Be aware that using a value less than 1.0 is a (possibly
#: significant) performance hit. When using a low value for this
#: setting, it is desirable that you set the background color to a
#: color the matches the general color of the desktop background, for
#: best text rendering.  If you want to dynamically change
#: transparency of windows, set dynamic_background_opacity to yes
#: (this is off by default as it has a performance cost). Changing
#: this option when reloading the config will only work if
#: dynamic_background_opacity was enabled in the original config.

# background_blur 10

#: Set to a positive value to enable background blur (blurring of the
#: visuals behind a transparent window) on platforms that support it.
#: Only takes effect when background_opacity is less than one. On
#: macOS, this will also control the blur radius (amount of blurring).
#: Setting it to too high a value will cause severe performance issues
#: and/or rendering artifacts. Usually, values up to 64 work well.
#: Note that this might cause performance issues, depending on how the
#: platform implements it, so use with care. Currently supported on
#: macOS and KDE.
# }}}
